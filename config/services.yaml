# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Infrastructure\EventListener\ResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    App\Domain\Order\Service\PricingService:
        arguments: [ ]
        calls:
            - method: addCollector
              arguments: [ '@App\Domain\Order\Service\PriceCollector' ]
            - method: addCollector
              arguments: [ '@App\Domain\Order\Service\VatCollector' ]
            - method: addCollector
              arguments: [ '@App\Domain\Order\Service\TotalAmountCollector' ]

    App\Domain\Order\Service\PriceCollector: ~
    App\Domain\Order\Service\VatCollector: ~
    App\Domain\Order\Service\TotalAmountCollector: ~

    App\Domain\Order\Service\OrderService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $pricingService: '@App\Domain\Order\Service\PricingService'

    App\Application\Command\CreateOrderHandler:
        arguments:
            $orderService: '@App\Domain\Order\Service\OrderService'

    App\Application\Query\GetOrderHandler:
        arguments:
            $orderService: '@App\Domain\Order\Service\OrderService'

    App\Domain\Order\Service\ConversionService: ~
    App\Domain\Order\Service\OrderResponseFormatter: ~